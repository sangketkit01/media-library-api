// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AssignMediaToGroup(ctx context.Context, arg AssignMediaToGroupParams) error
	BlockSessionByID(ctx context.Context, id pgtype.UUID) error
	CountMediaSizeByUser(ctx context.Context, userID pgtype.UUID) (interface{}, error)
	CreateMediaFile(ctx context.Context, arg CreateMediaFileParams) (MediaFile, error)
	CreateMediaGroup(ctx context.Context, arg CreateMediaGroupParams) (MediaGroup, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteMediaFile(ctx context.Context, id pgtype.UUID) error
	DeleteMediaGroup(ctx context.Context, id pgtype.UUID) error
	DeleteSession(ctx context.Context, id pgtype.UUID) error
	GetGroupByID(ctx context.Context, id pgtype.UUID) (MediaGroup, error)
	GetMediaFileByID(ctx context.Context, id pgtype.UUID) (MediaFile, error)
	GetReusableSessionByUserID(ctx context.Context, arg GetReusableSessionByUserIDParams) (Session, error)
	GetSession(ctx context.Context, id pgtype.UUID) (Session, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id pgtype.UUID) (User, error)
	ListGroupsByUser(ctx context.Context, userID pgtype.UUID) ([]MediaGroup, error)
	ListMediaByGroup(ctx context.Context, arg ListMediaByGroupParams) ([]MediaFile, error)
	ListMediaByUser(ctx context.Context, userID pgtype.UUID) ([]MediaFile, error)
	UpdateSessionTokenAndExpiry(ctx context.Context, arg UpdateSessionTokenAndExpiryParams) error
}

var _ Querier = (*Queries)(nil)
